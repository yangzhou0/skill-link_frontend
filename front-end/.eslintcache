[{"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/index.js":"1","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/reportWebVitals.js":"2","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/App.js":"3","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/ZipcodePage.js":"4","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobPage.js":"5","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobSearchResultPage.js":"6","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/SkillPage.js":"7","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobListingsPage.js":"8","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobOverviewPage.js":"9","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/HomePage.js":"10","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobListingPage.js":"11","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobTitleListingsPage.js":"12","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobSkillSurveyPage.js":"13","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobSearchBar.js":"14","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobOverview.js":"15","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/SkillSearchBar.js":"16","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListings.js":"17","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/ZipCodeSearchBar.js":"18","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/useFetchJobs.js":"19","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/JobSearchAPI.js":"20","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListingPage/Job.js":"21","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListingPage/JobPagination.js":"22","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListingPage/SearchForm.js":"23","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/Button.js":"24","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobTitles.js":"25","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/SkillsToJobForm.js":"26","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/AutoCompleteAPI.js":"27","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/JobListingsAPI.js":"28","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/SkillsToJobFormAPI.js":"29"},{"size":519,"mtime":1610728874813,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1610134861009,"results":"32","hashOfConfig":"31"},{"size":1433,"mtime":1610728874810,"results":"33","hashOfConfig":"31"},{"size":231,"mtime":1610728874816,"results":"34","hashOfConfig":"31"},{"size":577,"mtime":1610728874815,"results":"35","hashOfConfig":"31"},{"size":135,"mtime":1610728874815,"results":"36","hashOfConfig":"31"},{"size":236,"mtime":1610728874816,"results":"37","hashOfConfig":"31"},{"size":294,"mtime":1610728874814,"results":"38","hashOfConfig":"31"},{"size":6235,"mtime":1610749333773,"results":"39","hashOfConfig":"31"},{"size":1073,"mtime":1610728874814,"results":"40","hashOfConfig":"31"},{"size":1500,"mtime":1610728874814,"results":"41","hashOfConfig":"31"},{"size":246,"mtime":1610728874816,"results":"42","hashOfConfig":"31"},{"size":194,"mtime":1610728874815,"results":"43","hashOfConfig":"31"},{"size":934,"mtime":1610728874811,"results":"44","hashOfConfig":"31"},{"size":224,"mtime":1610728874811,"results":"45","hashOfConfig":"31"},{"size":454,"mtime":1610728874812,"results":"46","hashOfConfig":"31"},{"size":1225,"mtime":1610728874811,"results":"47","hashOfConfig":"31"},{"size":1699,"mtime":1610728874812,"results":"48","hashOfConfig":"31"},{"size":1954,"mtime":1610728874809,"results":"49","hashOfConfig":"31"},{"size":465,"mtime":1610728874809,"results":"50","hashOfConfig":"31"},{"size":1488,"mtime":1610728874811,"results":"51","hashOfConfig":"31"},{"size":803,"mtime":1610728874811,"results":"52","hashOfConfig":"31"},{"size":878,"mtime":1610728874811,"results":"53","hashOfConfig":"31"},{"size":654,"mtime":1610728874810,"results":"54","hashOfConfig":"31"},{"size":1769,"mtime":1610728874812,"results":"55","hashOfConfig":"31"},{"size":6285,"mtime":1610728874812,"results":"56","hashOfConfig":"31"},{"size":1555,"mtime":1610728874809,"results":"57","hashOfConfig":"31"},{"size":521,"mtime":1610728874809,"results":"58","hashOfConfig":"31"},{"size":952,"mtime":1610728874809,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1btapzz",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/index.js",[],["131","132"],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/reportWebVitals.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/App.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/ZipcodePage.js",["133","134"],"import React,{useState, useEffect} from 'react'\n\nimport ZipcodeSearchBar from '../components/ZipCodeSearchBar'\n\nexport default function ZipcodePage() {\n  return (\n    <div className = ''>\n      <ZipcodeSearchBar/>\n    </div>\n  )\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobPage.js",["135"],"import React,{useState, useEffect} from 'react'\n\nimport JobSearchBar from '../components/JobSearchBar'\nimport JobOverview from '../components/JobOverview'\n\nimport './css/JobPage.css'\nexport default function JobPage() {\n  const [associatedSkills, setAssociatedSkills] = useState({});\n  const updateAssociatedSkills = (associatedSkills) => {\n    setAssociatedSkills(associatedSkills)\n  }\n  return (\n    <div className = 'JobPage'>\n      <JobSearchBar updateAssociatedSkills = {updateAssociatedSkills}/>\n      <JobOverview associatedSkills = {associatedSkills}/>\n    </div>\n  )\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobSearchResultPage.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/SkillPage.js",["136","137"],"import React,{useState, useEffect} from 'react'\nimport SkillSearchBar from '../components/SkillSearchBar'\n\n\nexport default function SkillPage() {\n\n  return (\n    <div>\n      <h1>skill page</h1>\n      <SkillSearchBar />\n    </div>\n  )\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobListingsPage.js",["138","139"],"import React,{useState, useEffect} from 'react'\nimport JobListings from '../components/JobListings'\n\n//demo page for the job listing component\n\nexport default function JobListingsPage() {\n  let jobTitle = \"mechanic\"\n  return (\n    <div>\n      <JobListings jobTitle={jobTitle}/>\n    </div>\n  )\n}","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobOverviewPage.js",["140","141","142","143","144"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n// import Link from '@material-ui/core/Link';\nimport { Link} from 'react-router-dom';\nimport {searchByJob} from '../API/JobSearchAPI'\nimport {useState,useEffect} from 'react'\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\"> */}\n        Your Website\n      {/* </Link>{' '} */}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [0, 1, 2];\nconst photos = [\"http://localhost:3000/images/money-2.jpg\", \"http://localhost:3000/images/office.jpg\", \"http://localhost:3000/images/occupation-2.jpg\",\"http://localhost:3000/images/books-2.jpg\", \"http://localhost:3000/images/jumping.jpg\", \"http://localhost:3000/images/together.jpg\"]\n\nexport default function JobOverviewPage (props) {\n  let jobTitle = props.location.state.jobTitle\n  let zipcode = props.location.state.zipcode\n  let searchObject = {\n    \"job_title\":jobTitle,\n    \"zipcode\":zipcode\n  }\n\n  const [jobData,setJobData] = useState(Object())\n  useEffect(() => {\n    searchByJob(searchObject).then(response=>{\n      setJobData(response)\n    })\n  }, [props])\n\n  const classes = useStyles();\n  console.log('joboverview in joboverview page',jobData)\n  const jobObjectToRender = {\n    'Median Annual Salary': jobData.job_median_annual_salary,\n    'Coursera Courses': \"\",\n    'Related Occupations': jobData.school_programs,\n    'Knowledge': \"\",\n    'Abilities': \"\",\n    'Skills': \"\"\n  }\n\n  console.log('jobObjectToRender',jobObjectToRender)\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          {/* <Link color=\"inherit\" underline='hover' href=\"/\"> */}\n          <Link to={`/`}>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                Skill-Link\n            </Typography>\n          </Link>\n          {/* </Link> */}\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container>\n            <div className=\"d-flex justify-content-start\">\n              <div className=\"order-2 p-2 bd-highlight mt-5\">\n                <Typography component=\"h2\" variant=\"h2\" color=\"textPrimary\" gutterBottom>\n                {jobTitle}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textSecondary\" paragraph>\n                  {jobData.job_description}\n                </Typography>\n              </div>\n              <div className=\"order-1 p-2 bd-highlight\" dangerouslySetInnerHTML={{__html:jobData.job_video}} />;\n            </div>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Link to={{\n                    pathname:`/joblisting`,\n                    state:{\n                      jobTitle:jobTitle,\n                      zipcode:zipcode\n                    }\n                    }}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Job Listings\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Educational Resources\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {Object.keys(jobObjectToRender).map((key,card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={photos[card]}\n                    title=\"Image title\"\n                  />\n                  {console.log(card)}\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {key}\n                    </Typography>\n                    <Typography>\n                      {jobObjectToRender[key]}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  )\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/HomePage.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobListingPage.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobTitleListingsPage.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/pages/JobSkillSurveyPage.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobSearchBar.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobOverview.js",["145","146"],"import React,{useState, useEffect} from 'react'\n\nexport default function JobOverview({associatedSkills}) {\n  return (\n    <div>\n      {associatedSkills && console.log('here in Joboverview',associatedSkills)}\n    </div>\n  )\n}","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/SkillSearchBar.js",["147","148"],"import React,{useState, useEffect} from 'react'\nimport AsyncSelect from 'react-select/async';\nimport {getSkillAutoCompleteResults} from '../API/AutoCompleteAPI'\n\n\n\nexport default function SkillSearchBar() {\n\n  const loadNewOptions = inputValue => getSkillAutoCompleteResults(inputValue);\n  \n  return (\n    <div>\n      <AsyncSelect\n        isMulti\n        cacheOptions\n        defaultOptions\n        loadOptions={loadNewOptions}\n      />\n    </div>\n  )\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListings.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/ZipCodeSearchBar.js",["149","150","151"],"import React,{useState, useEffect} from 'react'\nimport AsyncSelect from 'react-select/async';\nimport {getZipcodeAutoCompleteResults} from '../API/AutoCompleteAPI'\nimport {searchByJob} from '../API/JobSearchAPI'\nimport { Link, Redirect} from 'react-router-dom';\n\n\nexport default function ZipcodeSearchBar() {\n\n  // const loadNewOptions = inputValue => getZipcodeAutoCompleteResults(inputValue);\n  const [redirect, setRedirect] = useState(false)\n  const [selectedZipcode, setSelectedZipcode] = useState(\n    JSON.parse(localStorage.getItem(\"searchContent\")).zipcode || String\n    )\n\n  const handleType = (e)=>{\n    let zipcode = document.getElementById(`zipcode`).value\n    setSelectedZipcode(zipcode)\n  }\n  useEffect(() => {\n    let parsedSearchContent = JSON.parse(localStorage.getItem(\"searchContent\"))\n    parsedSearchContent.zipcode = selectedZipcode\n    localStorage.setItem(\"searchContent\", JSON.stringify(parsedSearchContent));\n  }, [selectedZipcode]);\n  \n  const handleSubmit = async (e) =>{\n    // localStorage.removeItem('jobOverview')\n    let parsedSearchContent = JSON.parse(localStorage.getItem('searchContent'))\n    let searchObject = {\n      \"job_title\":parsedSearchContent.label + 's',\n      \"zipcode\":parsedSearchContent.zipcode\n    }\n    let response = await searchByJob(searchObject)\n    localStorage.setItem(\"jobOverview\", JSON.stringify(response));\n    console.log('response from zipcode search page',response)\n    setRedirect(true)\n  }\n  if (redirect) {\n    return (<Redirect to='/joboverview' />)\n  }\n  return (\n    <div>\n      <input id = 'zipcode' placeholder='zipcode' onChange = {handleType}></input>\n      <button onClick = {handleSubmit}>Submit</button>\n    </div>\n  )\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/useFetchJobs.js",["152"],"import React from 'react'\nimport { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] }\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs }\n    case ACTIONS.ERROR:\n      return { ...state, loading: false, error: action.payload.error, jobs: [] }\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage }\n    default:\n      return state\n  }\n}\n\nexport default function useFetchJobs(params,page) {\n  const [state,dispatch] = useReducer(reducer,{jobs:[],loading:true})\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source()\n    dispatch({type: ACTIONS.MAKE_REQUEST})\n    axios.get(BASE_URL,{\n      cancelToken: cancelToken1.token,\n      params: {...params,markdown:true,page:page}\n    }).then(res=>\n      dispatch({type: ACTIONS.GET_DATA, payload:{jobs: res.data}})\n    ).catch(e=>{\n      if (axios.isCancel(e)){return};\n      dispatch({type: ACTIONS.ERROR, payload:{error: e}})\n    })\n\n    // check if it is the last page\n    const cancelToken2 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: { markdown: true, page: page + 1, ...params }\n    }).then(res => {\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } }) \n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n    })\n\n    return ()=>{\n      cancelToken1.cancel()\n      cancelToken2.cancel()\n    }\n  }, [params,page])\n\n  return state\n}\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/JobSearchAPI.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListingPage/Job.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListingPage/JobPagination.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobListingPage/SearchForm.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/Button.js",["153"],"import React from 'react';\nimport './css/Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n  );\n};\n","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/JobTitles.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/components/SkillsToJobForm.js",["154"],"import React, {useState, useEffect } from \"react\";\nimport { Container, Col, Row, Jumbotron, Form, Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { getJobsListingsFromForm } from '../API/SkillsToJobFormAPI'\n\nexport default function SkillsToJobForm(props) {\n  const [jobData, setJobData] = useState();\n  const [redirect, setRedirect] = useState(false);\n  const skills = [{\n    \"ElementName\": \"Administration and Management\",\n    \"ElementId\": \"2.C.1.a\"},\n    {\n    \"ElementName\": \"Biology\",\n    \"ElementId\": \"2.C.4.d\"},\n    {\n    \"ElementName\": \"Body Coordination\",\n    \"ElementId\": \"1.A.3.c.3\"},\n    {\n    \"ElementName\": \"Building and Construction\",\n    \"ElementId\": \"2.C.3.d\"},\n    {\n    \"ElementName\": \"Chemistry\",\n    \"ElementId\": \"2.C.4.c\"},\n    {\n    \"ElementName\": \"Clerical\",\n    \"ElementId\": \"2.C.1.b\"},\n    {\n    \"ElementName\": \"Complex Problem Solving\",\n    \"ElementId\": \"2.B.2.i\"},\n    {\n    \"ElementName\": \"Computers and Electronics\",\n    \"ElementId\": \"2.C.3.a\"},\n    {\n    \"ElementName\": \"Customer and Personal Service\",\n    \"ElementId\": \"2.C.1.e\"},\n    {\n    \"ElementName\": \"Economics and Accounting\",\n    \"ElementId\": \"2.C.1.c\"},\n    {\n    \"ElementName\": \"Fine Arts\",\n    \"ElementId\": \"2.C.7.c\"},\n    {\n    \"ElementName\": \"Foreign Language\",\n    \"ElementId\": \"2.C.7.b\"},\n    {\n    \"ElementName\": \"Helping People\",\n    \"ElementId\": \"2.B.1.f\"},\n    {\n    \"ElementName\": \"Instructing\",\n    \"ElementId\": \"2.B.1.e\"},\n    {\n    \"ElementName\": \"Management of Financial Resources\",\n    \"ElementId\": \"2.B.5.b\"},\n    {\n    \"ElementName\": \"Mathematics\",\n    \"ElementId\": \"2.A.1.e\"},\n    {\n    \"ElementName\": \"Mechanical\",\n    \"ElementId\": \"2.C.3.e\"},\n    {\n    \"ElementName\": \"Medicine and Dentistry\",\n    \"ElementId\": \"2.C.5.a\"},\n    {\n    \"ElementName\": \"Memorization\",\n    \"ElementId\": \"1.A.1.d.1\"},\n    {\n    \"ElementName\": \"Monitoring\",\n    \"ElementId\": \"2.A.2.d\"},\n    {\n    \"ElementName\": \"Negotiation\",\n    \"ElementId\": \"2.B.1.d\"},\n    {\n    \"ElementName\": \"Operations Analysis\",\n    \"ElementId\": \"2.B.3.a\"},\n    {\n    \"ElementName\": \"Personnel and Human Resources\",\n    \"ElementId\": \"2.C.1.f\"},\n    {\n    \"ElementName\": \"Production and Processing\",\n    \"ElementId\": \"2.C.2.a\"},\n    {\n    \"ElementName\": \"Programming\",\n    \"ElementId\": \"2.B.3.e\"},\n    {\n    \"ElementName\": \"Psychology\",\n    \"ElementId\": \"2.C.4.e\"},\n    {\n    \"ElementName\": \"Public Safety and Security\",\n    \"ElementId\": \"2.C.8.a\"},\n    {\n    \"ElementName\": \"Quality Control Analysis\",\n    \"ElementId\": \"2.B.3.m\"},\n    {\n    \"ElementName\": \"Repairing\",\n    \"ElementId\": \"2.B.3.l\"},\n    {\n    \"ElementName\": \"Sales and Marketing\",\n    \"ElementId\": \"2.C.1.d\"},\n    {\n    \"ElementName\": \"Science\",\n    \"ElementId\": \"2.A.1.f\"},\n    {\n    \"ElementName\": \"Sociology and Anthropology\",\n    \"ElementId\": \"2.C.4.f\"},\n    {\n    \"ElementName\": \"Speaking\",\n    \"ElementId\": \"2.A.1.d\"},\n    {\n    \"ElementName\": \"Systems Analysis\",\n    \"ElementId\": \"2.B.4.g\"},\n    {\n    \"ElementName\": \"Teaching and Course Design\",\n    \"ElementId\": \"2.C.6\"},\n    {\n    \"ElementName\": \"Telecommunications\",\n    \"ElementId\": \"2.C.9.a\"},\n    {\n    \"ElementName\": \"Therapy and Counseling\",\n    \"ElementId\": \"2.C.5.b\"},\n    {\n    \"ElementName\": \"Time Management\",\n    \"ElementId\": \"2.B.5.a\"},\n    {\n    \"ElementName\": \"Troubleshooting\",\n    \"ElementId\": \"2.B.3.k\"},\n    {\n    \"ElementName\": \"Writing\",\n    \"ElementId\": \"2.A.1.c\"}]\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target)\n    const formDataObj = Object.fromEntries(formData.entries())\n    const fetchData = async () => {\n      setJobData(await getJobsListingsFromForm(formDataObj));\n    }\n    fetchData()\n  };\n\n  useEffect(() => {\n    if (jobData) {\n      setRedirect(true)\n    }\n  })\n\n    return (\n      <>\n        {redirect ? <Redirect\n            to={{\n            pathname: \"/jobtitlelistings\",\n            state: { jobs: jobData['0']['SKARankList'].slice(0, 20) }\n          }}\n        /> : <div></div>}\n        <br />\n        <Container>\n          <Row>\n            <Col md={{ span: 7, offset: 3 }}>\n              <Jumbotron>\n                <p>\n                  Interested in what careers you could have with your skillset? Fill out the form below!\n                </p>\n                <Form onSubmit={handleSubmit}>\n                  <h2>Select Your Confidence Of Each Skill</h2>\n                  {skills.map((skill) => (\n                    <Form.Row>\n                    <Form.Group as={Col} controlId={skill.ElementName}>\n                      <Form.Label>{skill.ElementName}</Form.Label>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Not Confident\"\n                        name={skill.ElementId}\n                        ids={skill.ElementName}\n                        value=\"1\"\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"A Little Confident\"\n                        name={skill.ElementId}\n                        ids={skill.ElementName}\n                        value=\"2\"\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Okay With\"\n                        name={skill.ElementId}\n                        ids={skill.ElementName}\n                        value=\"3\"\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Confident\"\n                        name={skill.ElementId}\n                        ids={skill.ElementName}\n                        value=\"4\"\n                      />\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"Very Confident\"\n                        name={skill.ElementId}\n                        ids={skill.ElementName}\n                        value=\"5\"\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  ))}\n                  <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                  </Button>\n                </Form>\n              </Jumbotron>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }","/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/AutoCompleteAPI.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/JobListingsAPI.js",[],"/Users/dylan/Desktop/cplatoon/cp_group_project/job_search_frontend/front-end/src/API/SkillsToJobFormAPI.js",[],["155","156"],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":15,"nodeType":"163","messageId":"164","endLine":1,"endColumn":23},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":1,"column":15,"nodeType":"163","messageId":"164","endLine":1,"endColumn":23},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":1,"column":15,"nodeType":"163","messageId":"164","endLine":1,"endColumn":23},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"166","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"167","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":16},{"ruleId":"161","severity":1,"message":"168","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":19},{"ruleId":"161","severity":1,"message":"169","line":67,"column":7,"nodeType":"163","messageId":"164","endLine":67,"endColumn":12},{"ruleId":"170","severity":1,"message":"171","line":83,"column":6,"nodeType":"172","endLine":83,"endColumn":13,"suggestions":"173"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":15,"nodeType":"163","messageId":"164","endLine":1,"endColumn":23},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":1,"column":15,"nodeType":"163","messageId":"164","endLine":1,"endColumn":23},{"ruleId":"161","severity":1,"message":"165","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"174","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"175","line":3,"column":9,"nodeType":"163","messageId":"164","endLine":3,"endColumn":38},{"ruleId":"161","severity":1,"message":"176","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"177","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"176","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"178","line":140,"column":3,"nodeType":"163","endLine":140,"endColumn":12,"suggestions":"179"},{"ruleId":"157","replacedBy":"180"},{"ruleId":"159","replacedBy":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'CameraIcon' is defined but never used.","'HomeIcon' is defined but never used.","'CardActions' is defined but never used.","'cards' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchObject'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'AsyncSelect' is defined but never used.","'getZipcodeAutoCompleteResults' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.","React Hook useEffect contains a call to 'setRedirect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [jobData] as a second argument to the useEffect Hook.",["185"],["182"],["183"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [props, searchObject]",{"range":"190","text":"191"},"Add dependencies array: [jobData]",{"range":"192","text":"193"},[2559,2566],"[props, searchObject]",[3786,3786],", [jobData]"]